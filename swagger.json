{
  "openapi": "3.0.1",
  "info": {
    "version": "4.6.0",
    "title": "Pets-project-app-backend",
    "description": "This is the API of the pets application."
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "The Users tag represents the set of APIs related to user management. It includes endpoints for registering a new user, logging in, updating user information, updating the user's profile photo, checking authentication status, and refreshing the authentication token."
    },
    {
      "name": "Pets",
      "description": "The Pets tag represents the set of APIs related to pet management. It includes endpoints for adding a pet to a user, retrieving pet information based on its ID, retrieving a list of pets added by the user, deleting a pet, updating pet information, and updating the pet's photo."
    },
    {
      "name": "Notices",
      "description": "The Notices tag represents the set of APIs related to notice management. It includes endpoints for adding and removing notices from favorites, adding notices, searching for notices by title, getting a list of favorited notices, searching for notices by ID, searching for notices by categories, deleting notices, updating the notice photo, and getting a list of notices added by the user."
    },
    {
      "name": "Services",
      "description": "The Services tag represents the set of APIs related to service management. It includes endpoints for adding a new service, updating the logo/avatar of a service, and retrieving a list of all available services."
    },
    {
      "name": "News",
      "description": "The News tag represents the set of APIs related to news management. It includes endpoints for adding a new news item and retrieving a list of all news items"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Creating a new user",
        "description": "API endpoint for creating a new user",

        "parameters": [],

        "requestBody": {
          "description": "User information for creating an account",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },

        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User successfully created"
                    }
                  }
                }
              }
            }
          },

          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation error message"
                    }
                  }
                }
              }
            }
          },

          "409": {
            "description": "Credentials conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/login": {
      "get": {
        "tags": ["Users"],
        "summary": "Login user",
        "description": "API endpoint for login user",

        "parameters": [],

        "requestBody": {
          "description": "User credentials for login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successfull login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },

          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Validation error message"
                    }
                  }
                }
              }
            }
          },

          "401": {
            "description": "Wrong credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email or password is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/:userId": {
      "get": {
        "tags": ["Users"],
        "summary": "Getting user info",
        "description": "API endpoint for getting user information",

        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "Valid mongo DB id",
            "example": "63ee26069ac5b92d9b405c03"
          }
        ],

        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },

          "401": {
            "description": "Authorization error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorize to get another user data"
                    }
                  }
                }
              }
            }
          },

          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User < user ID > not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Any valid email",
            "example": "example@email.com"
          },
          "password": {
            "type": "string",
            "description": "Any character string with length from 7 to 32 symbols",
            "example": "Qwerty1234"
          },
          "name": {
            "type": "string",
            "description": "User name or nicname",
            "example": "Ivan Petrenko"
          },
          "cityRegion": {
            "type": "string",
            "description": "User name or nicname",
            "example": "Lviv, Ukraine"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Ukrainian cell phone number in international format",
            "example": "+380671111111"
          }
        },
        "required": ["email", "password", "name", "cityRegion", "mobilePhone"]
      },

      "RegistrationResponse": {},

      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Any valid email",
            "example": "example@email.com"
          },
          "password": {
            "type": "string",
            "description": "Any character string with length from 7 to 32 symbols",
            "example": "Qwerty1234"
          }
        }
      },

      "LoginResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Valid mongo DB id",
            "example": "63ededef357fb145cb974cfc"
          },
          "token": {
            "type": "string",
            "description": "JSON Web Token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZWUyNjA2OWFjNWI5MmQ5YjQwNWMwMyIsImlhdCI6MTY3NjU1OTk4MiwiZXhwIjoxNjc2NTYzNTgyfQ.bAeg6O9eHGlNQr-L8y6dXuOUeQU6jCQ0DHz1PAs7MvC"
          }
        }
      },

      "UserInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name or nicname",
            "example": "Ivan Petrenko"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Any valid email",
            "example": "example@email.com"
          },
          "birthday": {
            "type": "string",
            "description": "Date of birth",
            "example": "11.11.2000"
          },
          "mobilePhone": {
            "type": "string",
            "description": "Ukrainian cell phone number in international format",
            "example": "+380671111111"
          },
          "cityRegion": {
            "type": "string",
            "description": "User name or nicname",
            "example": "Lviv, Ukraine"
          },
          "avatarURL": {
            "type": "string",
            "description": "Url to user avatar",
            "example": "https://i.ibb.co/ftynhJR/avatar1.jpg"
          }
        }
      }
    }
  }
}
